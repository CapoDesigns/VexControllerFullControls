#pragma config(Sensor, in1,    leftLineFollower, sensorLineFollower)
#pragma config(Sensor, in2,    centerLineFollower, sensorLineFollower)
#pragma config(Sensor, in3,    rightLineFollower, sensorLineFollower)
#pragma config(Sensor, in6,    gyro,           sensorGyro)
#pragma config(Sensor, dgtl1,  rightEncoder,   sensorQuadEncoder)
#pragma config(Sensor, dgtl3,  leftEncoder,    sensorQuadEncoder)
#pragma config(Sensor, dgtl6,  touchSensor,    sensorTouch)
#pragma config(Sensor, dgtl8,  sonarSensor,    sensorSONAR_inch)
#pragma config(Sensor, dgtl11, armEncoder,     sensorQuadEncoder)
#pragma config(Sensor, I2C_1,  rightIME,       sensorNone)
#pragma config(Sensor, I2C_2,  leftIME,        sensorNone)
#pragma config(Sensor, I2C_3,  armIME,         sensorNone)
#pragma config(Motor,  port1,           leftMotor,     tmotorVex393TurboSpeed_HBridge, openLoop, reversed)
#pragma config(Motor,  port2,           leftMotoBack,  tmotorVex393TurboSpeed_MC29, openLoop, reversed)
#pragma config(Motor,  port3,           rightMotorBack, tmotorVex393TurboSpeed_MC29, openLoop)
#pragma config(Motor,  port6,           clawMotor,     tmotorVex393_MC29, openLoop)
#pragma config(Motor,  port9,           armMotor,      tmotorServoContinuousRotation, openLoop)
#pragma config(Motor,  port10,          rightMotor,    tmotorVex393TurboSpeed_HBridge, openLoop)
//*!!Code automatically generated by 'ROBOTC' configuration wizard               !!*//

task main()
{
	bool stupidJason = true;

	repeat (forever) {
		setMotor(port1, 0);
		setMotor(port2, 0);
		setMotor(port3, 0);
		setMotor(port10, 0);
		while(vexRT[Ch3] > 30) {
			setMotor(port1, 127);
			setMotor(port2, 127);
			setMotor(port3, 105);
			setMotor(port10, 105);
		}
		while(vexRT[Ch3] < -30) {
			setMotor(port1, -127);
			setMotor(port2, -127);
			setMotor(port3, -119);
			setMotor(port10, -119);
		}
		  if(vexRT[Ch2] > 60)
    {
      motor[armMotor] = -40;
    }
    else if(vexRT[Ch2] < -60)
    {
      motor[armMotor] = 40;
    }
    else
    {
      motor[armMotor] = 0;
    }
    if(vexRT[Ch1] > 60)
    {
      motor[clawMotor] = 40;
    }
    else if(vexRT[Ch1] < -60)
    {
      motor[clawMotor] = -40;
    }
    else
    {
      motor[clawMotor] = 0;
    }
		while(vexRT[Ch4] < -30) {
			setMotor(port1, -110);
			setMotor(port2, -105);
			setMotor(port3, 105);
			setMotor(port10, 110);
		}
		while(vexRT[Ch4] > 30) {
			setMotor(port1, 127);
			setMotor(port2, 112);
			setMotor(port3, -113);
			setMotor(port10, -100);
		}
		if(vexRT[Btn8D] == 1) {
			while(stupidJason == true){

				if(SensorValue[sonarSensor] > 5){
					stupidJason = false;
				}
				setMotor(port1, -127);
				setMotor(port2, 112);
				setMotor(port3, -113);
				setMotor(port10, 83);
				wait1Msec(30);
			}
			setMotor(port1, -127);
			setMotor(port2, -127);
			setMotor(port3, -127);
			setMotor(port10, -127);
			wait1Msec(300);
			setMotor(port1, 127);
			setMotor(port2, 127);
			setMotor(port3, -119);
			setMotor(port10, -119);
			wait1Msec(250);
		}


	}
}

